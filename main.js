const dlg = document.getElementById('contactDialog');
const openBtn = document.getElementById('openDialog');
const closeBtn = document.getElementById('closeDialog');
const form = document.getElementById('contactForm');
let lastActive = null;

openBtn?.addEventListener('click', () => {
  lastActive = document.activeElement;
  dlg.showModal();
  dlg.querySelector('input, select, textarea, button')?.focus();
});

closeBtn?.addEventListener('click', () => dlg.close('cancel'));
// ===== –í–ê–õ–ò–î–ê–¶–ò–Ø –§–û–†–ú–´ =====

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal() {
    lastActive = document.activeElement;
    dlg.showModal();
    // –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã
    const firstInput = dlg.querySelector('input, select, textarea');
    if (firstInput) firstInput.focus();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
openBtn?.addEventListener('click', openModal);
closeBtn?.addEventListener('click', () => dlg.close('cancel'));

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
form?.addEventListener('submit', (e) => {
    e.preventDefault();

    // 1) –°–±—Ä–æ—Å –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    Array.from(form.elements).forEach(el => {
        el.setCustomValidity?.('');
        el.removeAttribute('aria-invalid');
    });

    // 2) –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    if (!form.checkValidity()) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        form.reportValidity();

        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–æ–ª—è —Å –æ—à–∏–±–∫–∞–º–∏
        Array.from(form.elements).forEach(el => {
            if (el.willValidate && !el.checkValidity()) {
                el.setAttribute('aria-invalid', 'true');
                
                // –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
                if (el.validity.typeMismatch && el.type === 'email') {
                    el.setCustomValidity('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π e-mail, –Ω–∞–ø—Ä–∏–º–µ—Ä name@example.com');
                } else if (el.validity.patternMismatch && el.id === 'phone') {
                    el.setCustomValidity('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7 (900) 000-00-00');
                } else if (el.validity.valueMissing) {
                    el.setCustomValidity('–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
                }
            }
        });

        return;
    }

    // 3) –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    alert('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    dlg.close('success');
    form.reset();
    
    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–æ–∫
    Array.from(form.elements).forEach(el => {
        el.removeAttribute('aria-invalid');
    });
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
dlg?.addEventListener('close', () => {
    lastActive?.focus();
});

// ===== –ú–ê–°–ö–ê –î–õ–Ø –¢–ï–õ–ï–§–û–ù–ê =====
const phone = document.getElementById('phone');

phone?.addEventListener('input', (e) => {
    let value = e.target.value.replace(/\D/g, '');
    
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: 8 ‚Üí 7
    if (value.startsWith('8')) {
        value = '7' + value.slice(1);
    }
    
    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ 11 —Ü–∏—Ñ—Ä
    if (value.length > 11) {
        value = value.slice(0, 11);
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    let formatted = '';
    if (value.length > 0) {
        formatted += '+7';
        if (value.length > 1) {
            formatted += ` (${value.slice(1, 4)}`;
        }
        if (value.length >= 4) {
            formatted += ') ';
        }
        if (value.length >= 5) {
            formatted += value.slice(4, 7);
        }
        if (value.length >= 8) {
            formatted += `-${value.slice(7, 9)}`;
        }
        if (value.length >= 10) {
            formatted += `-${value.slice(9, 11)}`;
        }
    }

    e.target.value = formatted;
});

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pattern –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
phone?.setAttribute('pattern', '^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$');

// ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø =====
// –í–∞–ª–∏–¥–∞—Ü–∏—è email –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
const email = document.getElementById('email');
email?.addEventListener('blur', () => {
    if (email.value && !email.checkValidity()) {
        email.setCustomValidity('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π e-mail');
        email.setAttribute('aria-invalid', 'true');
    } else {
        email.setCustomValidity('');
        email.removeAttribute('aria-invalid');
    }
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)
const nameField = document.getElementById('name');
nameField?.addEventListener('blur', () => {
    if (nameField.value.length < 2 && nameField.value.length > 0) {
        nameField.setCustomValidity('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
        nameField.setAttribute('aria-invalid', 'true');
    } else {
        nameField.setCustomValidity('');
        nameField.removeAttribute('aria-invalid');
    }
});

// –°–±—Ä–æ—Å –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
form?.addEventListener('focusin', (e) => {
    if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA' || e.target.tagName === 'SELECT') {
        e.target.setCustomValidity('');
        e.target.removeAttribute('aria-invalid');
    }
});

// ===== –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–¨ –¢–ï–ú–´ –° –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô –ú–ï–ñ–î–£ –í–ö–õ–ê–î–ö–ê–ú–ò =====
const KEY = 'theme';
const btn = document.querySelector('.theme-toggle');

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
function applyTheme(isDark) {
    if (isDark) {
        document.body.classList.add('theme-dark');
    } else {
        document.body.classList.remove('theme-dark');
    }
    if (btn) {
        btn.setAttribute('aria-pressed', String(isDark));
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
        const icon = btn.querySelector('.theme-toggle__icon');
        if (icon) {
            icon.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
        }
    }
    localStorage.setItem(KEY, isDark ? 'dark' : 'light');
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function toggleTheme() {
    const isDark = !document.body.classList.contains('theme-dark');
    applyTheme(isDark);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function initTheme() {
    const savedTheme = localStorage.getItem(KEY);
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    let isDark = false;
    
    if (savedTheme === 'dark') {
        isDark = true;
    } else if (savedTheme === 'light') {
        isDark = false;
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Ç–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é
        isDark = systemPrefersDark;
    }
    
    applyTheme(isDark);
}

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ localStorage (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏)
function setupThemeSync() {
    window.addEventListener('storage', (event) => {
        if (event.key === KEY) {
            const isDark = event.newValue === 'dark';
            applyTheme(isDark);
        }
    });
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
function startSyncCheck() {
    setInterval(() => {
        const savedTheme = localStorage.getItem(KEY);
        const currentIsDark = document.body.classList.contains('theme-dark');
        const shouldBeDark = savedTheme === 'dark';
        
        if (currentIsDark !== shouldBeDark) {
            applyTheme(shouldBeDark);
        }
    }, 1000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    initTheme();
    setupThemeSync();
    startSyncCheck();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—é
    if (btn) {
        btn.addEventListener('click', toggleTheme);
    }
    
    // –¢–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å data-–∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
    const themeButtons = document.querySelectorAll('[data-action="toggle-theme"]');
    themeButtons.forEach(button => {
        button.addEventListener('click', toggleTheme);
    });
});

// ===== –ö–ê–°–¢–û–ú–ù–´–ô –í–ò–î–ï–û –ü–õ–ï–ï–† –° MOBILE SUPPORT =====
function initVideoPlayer() {
    const videoPlayer = document.querySelector('.video-player');
    if (!videoPlayer) return;

    const video = videoPlayer.querySelector('.video-player__video');
    const playBtn = videoPlayer.querySelector('.video-player__play');
    const playIcon = playBtn.querySelector('.video-player__icon');
    const muteBtn = videoPlayer.querySelector('.video-player__mute');
    const muteIcon = muteBtn.querySelector('.video-player__icon');
    const fullscreenBtn = videoPlayer.querySelector('.video-player__fullscreen');
    const fullscreenIcon = fullscreenBtn.querySelector('.video-player__icon');
    const progressBar = videoPlayer.querySelector('.video-player__progress-bar');
    const seek = videoPlayer.querySelector('.video-player__seek');
    const volume = videoPlayer.querySelector('.video-player__volume');
    const currentTime = videoPlayer.querySelector('.video-player__current');
    const duration = videoPlayer.querySelector('.video-player__duration');
    const controls = videoPlayer.querySelector('.video-player__controls');

    let hideControlsTimeout;
    let isSeeking = false;

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    function formatTime(seconds) {
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs.toString().padStart(2, '0')}`;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∫–æ–Ω–æ–∫
    function updateIcons() {
        // –ò–∫–æ–Ω–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è/–ø–∞—É–∑—ã
        playIcon.textContent = video.paused ? '‚ñ∂' : '‚è∏';
        
        // –ò–∫–æ–Ω–∫–∞ –∑–≤—É–∫–∞
        if (video.muted || video.volume === 0) {
            muteIcon.textContent = 'üîá';
        } else if (video.volume < 0.5) {
            muteIcon.textContent = 'üîà';
        } else {
            muteIcon.textContent = 'üîä';
        }
        
        // –ò–∫–æ–Ω–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        const isFullscreen = document.fullscreenElement || 
                            document.webkitFullscreenElement ||
                            document.mozFullScreenElement;
        fullscreenIcon.textContent = isFullscreen ? '‚õ∂' : '‚õ∂';
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    function toggleControls() {
        controls.classList.add('video-player__controls--visible');
        clearTimeout(hideControlsTimeout);
        
        if (!video.paused) {
            hideControlsTimeout = setTimeout(() => {
                if (!isSeeking) {
                    controls.classList.remove('video-player__controls--visible');
                }
            }, 3000);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    function updateProgress() {
        if (!isSeeking) {
            const percent = (video.currentTime / video.duration) * 100;
            progressBar.style.width = `${percent}%`;
            seek.value = percent;
            currentTime.textContent = formatTime(video.currentTime);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    function updateDuration() {
        if (!isNaN(video.duration)) {
            duration.textContent = formatTime(video.duration);
        }
    }

    // –°–æ–±—ã—Ç–∏—è –≤–∏–¥–µ–æ
    video.addEventListener('timeupdate', updateProgress);
    video.addEventListener('loadedmetadata', updateDuration);
    video.addEventListener('ended', () => {
        videoPlayer.classList.remove('video-player--playing');
        updateIcons();
        controls.classList.add('video-player__controls--visible');
    });

    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫
    video.addEventListener('play', updateIcons);
    video.addEventListener('pause', updateIcons);
    video.addEventListener('volumechange', updateIcons);

    // –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    document.addEventListener('fullscreenchange', updateIcons);
    document.addEventListener('webkitfullscreenchange', updateIcons);
    document.addEventListener('mozfullscreenchange', updateIcons);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    playBtn.addEventListener('click', () => {
        if (video.paused) {
            video.play();
            videoPlayer.classList.add('video-player--playing');
        } else {
            video.pause();
            videoPlayer.classList.remove('video-player--playing');
        }
        toggleControls();
    });

    muteBtn.addEventListener('click', () => {
        video.muted = !video.muted;
        videoPlayer.classList.toggle('video-player--muted', video.muted);
        toggleControls();
    });

    fullscreenBtn.addEventListener('click', () => {
        if (!document.fullscreenElement) {
            if (video.requestFullscreen) {
                video.requestFullscreen();
            } else if (video.webkitRequestFullscreen) {
                video.webkitRequestFullscreen();
            } else if (video.mozRequestFullScreen) {
                video.mozRequestFullScreen();
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            }
        }
        toggleControls();
    });

    // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    seek.addEventListener('input', () => {
        isSeeking = true;
        const seekTime = (seek.value / 100) * video.duration;
        video.currentTime = seekTime;
        currentTime.textContent = formatTime(video.currentTime);
    });

    seek.addEventListener('change', () => {
        isSeeking = false;
    });

    volume.addEventListener('input', () => {
        video.volume = volume.value;
        video.muted = (volume.value === 0);
        toggleControls();
    });

    // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –≤—Å–µ–≥–æ –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä–∞
    videoPlayer.addEventListener('touchstart', (e) => {
        e.preventDefault();
        toggleControls();
    });

    video.addEventListener('click', toggleControls);

    // –ê–≤—Ç–æ-—Å–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤
    video.addEventListener('play', () => {
        setTimeout(() => {
            if (!video.paused && !isSeeking) {
                controls.classList.remove('video-player__controls--visible');
            }
        }, 3000);
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateDuration();
    updateIcons();
    toggleControls(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initVideoPlayer();
});
class Carousel {
    constructor(container) {
        this.container = container;
        this.slides = container.querySelector('.carousel-container');
        this.slideItems = container.querySelectorAll('.carousel-slide');
        this.prevBtn = container.querySelector('.carousel-prev');
        this.nextBtn = container.querySelector('.carousel-next');
        this.dots = container.querySelectorAll('.dot');
        this.currentSlide = 0;
        
        this.init();
    }
    
    init() {
        this.prevBtn.addEventListener('click', () => this.prev());
        this.nextBtn.addEventListener('click', () => this.next());
        
        this.dots.forEach((dot, index) => {
            dot.addEventListener('click', () => this.goToSlide(index));
        });
        
        this.updateSlide();
    }
    
    next() {
        this.currentSlide = (this.currentSlide + 1) % this.slideItems.length;
        this.updateSlide();
    }
    
    prev() {
        this.currentSlide = (this.currentSlide - 1 + this.slideItems.length) % this.slideItems.length;
        this.updateSlide();
    }
    
    goToSlide(index) {
        this.currentSlide = index;
        this.updateSlide();
    }
    
    updateSlide() {
        const offset = -this.currentSlide * 100;
        this.slides.style.transform = `translateX(${offset}%)`;
        
        this.dots.forEach((dot, index) => {
            dot.classList.toggle('active', index === this.currentSlide);
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
document.addEventListener('DOMContentLoaded', () => {
    const carousel = new Carousel(document.querySelector('.carousel'));
    
    // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    setInterval(() => carousel.next(), 5000);
});
// ===== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–ê–ü–¢–ò–í–ù–û–ô –®–ê–ü–ö–û–ô =====

function initHeader() {
    const header = document.querySelector('.site-header');
    const menuToggle = document.querySelector('.menu-toggle');
    const navList = document.querySelector('.site-nav__list');
    let lastScrollY = window.scrollY;
    let isScrolling;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ —à–∞–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    function handleScroll() {
        const currentScrollY = window.scrollY;
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
        clearTimeout(isScrolling);
        
        // –ü—Ä—è—á–µ–º —à–∞–ø–∫—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –≤–Ω–∏–∑, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –≤–≤–µ—Ä—Ö
        if (currentScrollY > lastScrollY && currentScrollY > 100) {
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º —à–∞–ø–∫—É
            header.classList.add('hidden');
        } else {
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–ø–∫—É
            header.classList.remove('hidden');
        }
        
        // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
        if (currentScrollY > 50) {
            header.classList.add('compact');
        } else {
            header.classList.remove('compact');
        }
        
        lastScrollY = currentScrollY;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        isScrolling = setTimeout(() => {
            header.classList.remove('hidden');
        }, 1500);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    function toggleMobileMenu() {
        menuToggle.classList.toggle('active');
        navList.classList.toggle('active');
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ç–µ–ª–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–µ–Ω—é
        document.body.style.overflow = navList.classList.contains('active') ? 'hidden' : '';
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
    function closeMobileMenu() {
        menuToggle.classList.remove('active');
        navList.classList.remove('active');
        document.body.style.overflow = '';
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    if (window.innerWidth <= 768) {
        // –¢–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        window.addEventListener('scroll', handleScroll, { passive: true });
        
        if (menuToggle) {
            menuToggle.addEventListener('click', toggleMobileMenu);
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
        const navLinks = document.querySelectorAll('.site-nav__link');
        navLinks.forEach(link => {
            link.addEventListener('click', closeMobileMenu);
        });
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
        document.addEventListener('click', (e) => {
            if (navList.classList.contains('active') && 
                !e.target.closest('.site-nav__list') && 
                !e.target.closest('.menu-toggle')) {
                closeMobileMenu();
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', () => {
        if (window.innerWidth > 768) {
            // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ —É–±–∏—Ä–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã
            menuToggle?.classList.remove('active');
            navList?.classList.remove('active');
            document.body.style.overflow = '';
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initHeader();
});